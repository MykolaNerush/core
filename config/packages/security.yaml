security:
  role_hierarchy:
      ROLE_SUPER_ADMIN: [ROLE_ADMIN]
      ROLE_ADMIN: [ROLE_USER]
      ROLE_MODERATOR: [ROLE_USER]

  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"

  providers:
    app_user_provider:
      entity:
        class: App\Domain\Core\User\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    api:
      pattern: ^/api/v1/internal
      stateless: true
      provider: app_user_provider
      custom_authenticators:
        - App\Infrastructure\Core\Auth\Security\JwtAuthenticator
      entry_point: App\Infrastructure\Core\Auth\Security\JwtAuthenticator
      security: true
      switch_user: { parameter: _switch_user_core, role: ROLE_ADMIN }

  access_control:
    - { path: ^/api/v1/internal/signin, roles: PUBLIC_ACCESS }
    - { path: ^/api/v1/internal/healthz, roles: PUBLIC_ACCESS }
    - { path: ^/api/v1/internal/refresh-token, roles: PUBLIC_ACCESS }
    - { path: ^/api/v1/internal, roles: IS_AUTHENTICATED_FULLY }

when@test:
  security:
    password_hashers:
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4
        time_cost: 3
        memory_cost: 10
#access_control:
#  - { path: ^/api/v1/internal/signin, roles: PUBLIC_ACCESS }
#  - { path: ^/api/v1/internal, roles: IS_AUTHENTICATED_FULLY }
##    access_control:
###         - { path: ^/admin, roles: ROLE_ADMIN }
###         - { path: ^/moderator, roles: ROLE_MODERATOR }
##         - { path: ^/api/auth, roles: PUBLIC_ACCESS }
##         - { path: ^/api, roles: ROLE_USER }
##         - { path: ^/api/v1/doc, roles: IS_AUTHENTICATED_ANONYMOUSLY }
